proto_library(
    name = "protos",
    srcs = [
        "src/feature_extractor.proto",
        "src/sentence.proto",
        "src/task_spec.proto",
    ],
)

cc_proto_library(
    name = "cc_protos",
    deps = [":protos"],
)

cc_library(
    name = "cld3",
    srcs = [
        "src/base.cc",
        "src/base.h",
        "src/casts.h",
        "src/embedding_feature_extractor.cc",
        "src/embedding_feature_extractor.h",
        "src/embedding_network.cc",
        "src/embedding_network.h",
        "src/embedding_network_params.h",
        "src/feature_extractor.cc",
        "src/feature_extractor.h",
        "src/feature_types.cc",
        "src/feature_types.h",
        "src/float16.h",
        "src/fml_parser.cc",
        "src/fml_parser.h",
        "src/lang_id_nn_params.cc",
        "src/lang_id_nn_params.h",
        "src/language_identifier_features.cc",
        "src/language_identifier_features.h",
        "src/nnet_language_identifier.cc",
        "src/nnet_language_identifier.h",
        "src/registry.cc",
        "src/registry.h",
        "src/relevant_script_feature.cc",
        "src/relevant_script_feature.h",
        "src/script_detector.h",
        "src/script_span/fixunicodevalue.cc",
        "src/script_span/fixunicodevalue.h",
        "src/script_span/generated_entities.cc",
        "src/script_span/generated_ulscript.cc",
        "src/script_span/generated_ulscript.h",
        "src/script_span/getonescriptspan.cc",
        "src/script_span/getonescriptspan.h",
        "src/script_span/integral_types.h",
        "src/script_span/offsetmap.cc",
        "src/script_span/offsetmap.h",
        "src/script_span/port.h",
        "src/script_span/stringpiece.h",
        "src/script_span/text_processing.cc",
        "src/script_span/text_processing.h",
        "src/script_span/utf8acceptinterchange.h",
        "src/script_span/utf8prop_lettermarkscriptnum.h",
        "src/script_span/utf8repl_lettermarklower.h",
        "src/script_span/utf8scannot_lettermarkspecial.h",
        "src/script_span/utf8statetable.cc",
        "src/script_span/utf8statetable.h",
        "src/sentence_features.cc",
        "src/sentence_features.h",
        "src/simple_adder.h",
        "src/task_context.cc",
        "src/task_context.h",
        "src/task_context_params.cc",
        "src/task_context_params.h",
        "src/unicodetext.cc",
        "src/unicodetext.h",
        "src/utils.cc",
        "src/utils.h",
        "src/workspace.cc",
        "src/workspace.h",
    ],
    hdrs = ["src/nnet_language_identifier.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":cc_protos",
    ],
)

# The executables below are functional. Uncomment to use.

cc_binary(
    name = "language_identifier",
    srcs = [
        "src/language_identifier_main.cc",
    ],
    deps = [
        ":cld3",
    ],
)

cc_test(
    name = "getonescriptspan_test",
    srcs = [
        "src/script_span/getonescriptspan_test.cc",
    ],
    deps = [
        ":cld3",
    ],
)

cc_test(
    name = "language_identifier_features_test",
    srcs = [
        "src/language_identifier_features_test.cc",
    ],
    copts = ["-Ithird_party/cld3/src"],
    deps = [
        ":cld3",
    ],
)

cc_test(
    name = "nnet_lang_id_test",
    srcs = [
        "src/nnet_lang_id_test.cc",
        "src/nnet_lang_id_test_data.cc",
        "src/nnet_lang_id_test_data.h",
    ],
    deps = [
        ":cld3",
    ],
)
